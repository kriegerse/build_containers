---
build-clamav:
  stage: build
  script:
    - source build_info.sh
    - docker build --network host -f clamav/Dockerfile
      --build-arg FS_BASE=clamav
      -t $docker_username/clamav-stage:$BUILD_PRIMARY_TAG .
    - docker push $docker_username/clamav-stage:$BUILD_PRIMARY_TAG
    - docker image ls
    - for i in $BUILD_SECONDARY_TAGS ; do
        docker tag $docker_username/clamav-stage:$BUILD_PRIMARY_TAG
        $docker_username/clamav-stage:$i ;
        docker push $docker_username/clamav-stage:$i ; done
  rules:
    # run on PR when changes on files
    - if: $CI_MERGE_REQUEST_ID
      changes:
        - clamav/*
        - clamav/**/*
    # run on branches other than master when changes on files
    - if: $CI_COMMIT_BRANCH != 'master'
      changes:
        - clamav/*
        - clamav/**/*
    # run on schedules or web frontend
    - if: $CI_PIPELINE_SOURCE == 'web'
    # run on schedules for clamav
    - if: $schedule_job == 'clamav'
    # run on master when changes on files (e.g. after merge)
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - clamav/*
        - clamav/**/*


test-clamav:
  stage: test
  needs:
    - job: build-clamav
    - job: prepare-build-info
      artifacts: true
  services:
    - name: kriegerse/clamav-stage:commit-$CI_COMMIT_SHORT_SHA
      alias: clamav
  image: kriegerse/clamav-stage:commit-$CI_COMMIT_SHORT_SHA
  before_script: []
  script:
    - source build_info.sh
    - bash clamav/tests/clamd_eicar.sh
  rules:
    # run on PR when changes on files
    - if: $CI_MERGE_REQUEST_ID
      changes:
        - clamav/*
        - clamav/**/*
    # run on branches other than master when changes on files
    - if: $CI_COMMIT_BRANCH != 'master'
      changes:
        - clamav/*
        - clamav/**/*
    # run on schedules or web frontend
    - if: $CI_PIPELINE_SOURCE == 'web'
    # run on schedules for clamav
    - if: $schedule_job == 'clamav'
    # run on master when changes on files (e.g. after merge)
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - clamav/*
        - clamav/**/*


include:
  - template: Security/Container-Scanning.gitlab-ci.yml

container_scanning:
  before_script: []
  variables:
    GIT_STRATEGY: fetch
    DOCKER_USER: $docker_username
    DOCKER_PASSWORD: $docker_password
    DOCKER_IMAGE: $docker_username/clamav-stage:commit-$CI_COMMIT_SHORT_SHA
    # DOCKER_IMAGE: $docker_username/clamav-stage:commit-9e6f9838
    DOCKERFILE_PATH: clamav/Dockerfile
    SECURE_LOG_LEVEL: debug


publish-clamav:
  stage: publish
  needs:
    - job: test-clamav
    - job: prepare-build-info
      artifacts: true
  script:
    - source build_info.sh
    - docker pull $docker_username/clamav-stage:$BUILD_PRIMARY_TAG
    - docker image ls
    - for i in $RELEASE_PRIMARY_TAG $RELEASE_SECONDARY_TAGS ; do
        docker tag $docker_username/clamav-stage:$BUILD_PRIMARY_TAG
        $docker_username/clamav:$i ;
        docker push $docker_username/clamav:$i ; done
  rules:
    # run on web frontend and if branch master
    - if: $CI_PIPELINE_SOURCE == 'web' && $CI_COMMIT_BRANCH == 'master'
    # run on schedules for clamav and if branch master
    - if: $schedule_job == 'clamav' && $CI_COMMIT_BRANCH == 'master'
    # run on master when changes on files (e.g. after merge)
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - clamav/*
        - clamav/**/*
